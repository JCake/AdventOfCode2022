import java.sql.Array;
import java.util.*;
import java.util.stream.Collectors;

public class Tetris {

    private static class Coord {
        int x;  // range of 0-6
        long y;  // 0 (ground) +

        public Coord(int x, long y) {
            this.x = x;
            this.y = y;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Coord coord = (Coord) o;
            return x == coord.x && y == coord.y;
        }

        @Override
        public int hashCode() {
            return Objects.hash(x, y);
        }

        @Override
        public String toString() {
            return "Coord{" +
                    "x=" + x +
                    ", y=" + y +
                    '}';
        }
    }

    private static final int WIDTH = 7;
    private static final long STEPS = 1000000000000L; // was 2022 for part 1

    public static void main(String[] args){
        String[] jetPushes = JETS.split("");

        Set<Coord> occupiedSpots = new HashSet<>();

        long highestY = 0;
        int jetIndex = 0;
        for(long r = 1; r <= STEPS; r++) {
            List<Coord> piece = buildPiece(r, highestY);
            boolean moving = true;
            while(moving){
                // Jet pushes over
                String push = jetPushes[jetIndex];
                if(">".equals(push)){
                    if(piece.stream().allMatch(part -> part.x < WIDTH - 1) &&
                            piece.stream().noneMatch(part -> occupiedSpots.contains(new Coord(part.x + 1, part.y)))){
                        piece.forEach(part -> part.x = part.x + 1);
                    }
                } else {
                    if(piece.stream().allMatch(part -> part.x > 0) &&
                            piece.stream().noneMatch(part -> occupiedSpots.contains(new Coord(part.x - 1, part.y)))) {
                        piece.forEach(part -> part.x = part.x - 1);
                    }
                }
                jetIndex = (jetIndex + 1) % jetPushes.length;

                // Go down if can
                if(piece.stream().allMatch(part -> part.y > 0) &&
                        piece.stream().noneMatch(part -> occupiedSpots.contains(new Coord(part.x, part.y - 1)))){
                    piece.forEach(part -> part.y = part.y - 1);
                } else {
                    moving = false; // done moving if can't go down
                }
            }
            occupiedSpots.addAll(piece);
            highestY = Math.max(piece.stream().map(spot -> spot.y).max(Long::compareTo).get() + 1, highestY);
            final long limit = (long) Math.floor(r / 100.0);
            occupiedSpots.removeAll(occupiedSpots.stream().filter(spot -> spot.y < limit).collect(Collectors.toSet()));
        }

        System.out.println(highestY);

    }

    private static List<Coord> buildPiece(long pieceNum, long highestY) {
        List<Coord> pieceParts = new ArrayList<>();
        // Left edge 2 units from left
        // Bottom edge 3 units from bottom
        if(pieceNum % 5 == 1){
            // horizonal line
            for(int x = 2; x <= 5; x++){
                pieceParts.add(new Coord(x, highestY + 3));
            }
        } else if(pieceNum % 5 == 2){
            pieceParts.add(new Coord(3, highestY + 3));
            pieceParts.add(new Coord(2, highestY + 4));
            pieceParts.add(new Coord(3, highestY + 4));
            pieceParts.add(new Coord(4, highestY + 4));
            pieceParts.add(new Coord(3, highestY + 5));
            // +
        } else if(pieceNum % 5 == 3){
            // Corner
            pieceParts.add(new Coord(2, highestY + 3));
            pieceParts.add(new Coord(3, highestY + 3));
            pieceParts.add(new Coord(4, highestY + 3));
            pieceParts.add(new Coord(4, highestY + 4));
            pieceParts.add(new Coord(4, highestY + 5));
        } else if(pieceNum % 5 == 4){
            // vertical line
            for(int y = 0; y < 4; y++){
                pieceParts.add(new Coord(2, highestY + 3 + y));
            }
        } else {
            // square
            pieceParts.add(new Coord(2, highestY + 3));
            pieceParts.add(new Coord(3, highestY + 3));
            pieceParts.add(new Coord(2, highestY + 4));
            pieceParts.add(new Coord(3, highestY + 4));
        }
        return pieceParts;
    }

    private static final String SAMPLE_JETS = ">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>";
    private static final String
}
